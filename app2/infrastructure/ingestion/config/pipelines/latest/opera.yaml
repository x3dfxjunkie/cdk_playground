stack_extension: &se opera
ingest_pattern: &ip messaging
active: True
pattern_instances:
  - region: &region-1 us-east-1
    resources:
      cluster_name: &rcm opera-mq
      kinesis: &kinesis
        stream_name: &stream_name opera-kinesis
      ecs:
        ecr:
          repository_name: guest360/ingestion/rabbitmq_consumer
        secret_name: &secret_name lst-use1-opera-ca-rabbitmq-secret
        s3:
          bucket_name: *rcm
        services:
          - service_name: PSB-PRESERVATION-CHECKOUT-GUEST360  # Max length 34 characters due construct prefixes
            image_tag: &image v0.2.x
            desired_count : 1
            cloudmap: False
            environment: &environment
              DEFAULT_BATCH_SIZE : 400                                      #Integer value gather than 0  Required:No  Default Value  400
              DEFAULT_MAX_RETRY_ATTEMPT : 3                                 #Integer value gather than 0  Required:No  Default Value  3
              DEFAULT_RETRY_BATCH_SIZE :  5                                 #Integer value gather than 0  Required:No  Default Value  5
              DEFAULT_MAX_WAIT_MILLISECS : 100                              #Integer value gather than 0  Required:No  Default Value  1000
              MAX_BATCH_SIZE : 500                                          # This is batch size limit from Kinesis. #Integer value gather than 0  Required:No  Default Value  500
              MAX_WAIT_MILLISECS : 300                                       # This is batch size limit from Kinesis. #Integer value gather than 0  Required:No  Default Value  500
              LOGLEVEL : INFO                                               #Required:no ,default value INFO  Python logging package severity level. [DEBUG, INFO, WARNING, ERROR, CRITICAL]
              ENVIRONMENT :  latest                                         #Required:Yes ,default value “” ,Environment value (latest,stage,prod)
              REGION : *region-1                                            #Required:No ,  Default Value:us-east-1     ,AWS region
              KINESIS_STREAM :  *stream_name                                #Required:Yes , default value “”, Kinesis stream name
              KINESIS_PARTITIONS : 10000                                    #Required:No , Default Value  10000 , Number of distinct unique parition keys generated when sending data to kinesis
              KINESIS_BATCH_SIZE :   400                                    #Required:No , Default Value  400 , Max number of records to send in each api put_records request to Kinesis stream
              KINESIS_RETRY_BATCH_SIZE : 5050                               #Required:No , Default Value DEFAULT_RETRY_BATCH_SIZE  , Max number of records to send in each api put_records request to Kinesis stream
              KINESIS_MAX_WAIT_MILLISECS : 100                              #Required:No , Default Value 1000 , Maximum amount to wait send data in batch even when records to be sent are less than batch size
              FAILED_MSG_BUCKET_NAME : latest-fail-objects-0                # Required:Yes , S3 bucket name to store records after exhausting max retry attempt
              FAILED_MSG_BUCKET_PATH : /PSB-PRESERVATION-CHECKOUT-GUEST360/ #Required:Yes , Default Value no have, “/”
              MAX_RETRY_ATTEMPT :   3                                       #Required:Yes,  Default Value  3  Number of attempts to send record to kinesis before writing to failed records S3 bucket
              RABBITMQ_SECRET_PATH : *secret_name                           # pragma: allowlist secret #Required:Yes, Secret manager secret path. value is prepended to this path value by connector code , “Secretname”
              RABBITMQ_HOST :   latest.pms-rmq.wdprapps.disney.com          #Required:Yes, Default Value “localhost”  RabbitMQ server host name or IP address
              RABBITMQ_VHOST : PMS                                          # RABBITMQ_VIRTUAL_HOST RABBITMQ_VHOST  Required:No ,  Default Value “/” RabbitMQ virtual host name
              RABBITMQ_PORT : 5671                                          # Required:No , Default Value 5762  RabbitMQ port
              RABBITMQ_QUEUE :   PSBP.RESERVATION.CHECKOUT.GUEST360         # Required:Yes,  RabbitMQ queue name
              RABBITMQ_QUEUE_DURABLE : True                                 # Required:no ,  Default Value False RabbitMQ queue “durable” flag
              RABBITMQ_QOS_PREFETCH_COUNT :  65535                          # Required:no , default value KINESIS_BATCH_SIZE Queue prefetch count value
              RABBITMQ_ROUTING_KEY :                                        # Required:no , Default Value RABBITMQ_QUEUE RabbitMQ routing key
              RABBITMQ_EXCHANGE :                                           # Required:no ,Default Value  <empty string>  ,  RabbitMQ exchange name
              RABBITMQ_EXCHANGE_TYPE :                                      # Required:no , Default Value direct  RabbitMQ exchange type. Valid vlaues [direct, fanout, headers, topic]
              RABBITMQ_EXCHANGE_PASSIVE :   True                            # Bool Required:no ,  Default Value False RabbitMQ exchange config value for passive flag
              RABBITMQ_EXCHANGE_DURABLE :  True                             # Bool Required:no , default Value False
              RABBITMQ_EXCHANGE_AUTO_DELETE : True                          # Bool Required:no , Default Value False
              USE_SSL: True
          - service_name: PSBP-RESERVATION-CHECKIN-GUEST360
            image_tag: *image
            desired_count : 1
            cloudmap: False
            environment:
              <<: *environment
              FAILED_MSG_BUCKET_PATH : /PSBP-RESERVATION-CHECKIN-GUEST360/
              RABBITMQ_QUEUE :   PSBP.RESERVATION.CHECKIN.GUEST360
          - service_name: PSBP-RESERVATION-UPDATERESERVATION-GUEST360
            image_tag: *image
            desired_count : 1
            cloudmap: False
            environment:
              <<: *environment
              FAILED_MSG_BUCKET_PATH : /PSBP-RESERVATION-UPDATERESERVATION-GUEST360/
              RABBITMQ_QUEUE :   PSBP.RESERVATION.UPDATERESERVATION.GUEST360
          - service_name: PSBP-RESERVATION-NEWRESERVATION-GUEST360
            image_tag: *image
            desired_count : 1
            cloudmap: False
            environment:
              <<: *environment
              FAILED_MSG_BUCKET_PATH : /PSBP-RESERVATION-NEWRESERVATION-GUEST360/
              RABBITMQ_QUEUE :   PSBP.RESERVATION.NEWRESERVATION.GUEST360
          - service_name: PSBP-RESERVATION-CANCEL-GUEST360
            image_tag: *image
            desired_count : 1
            cloudmap: False
            environment:
              <<: *environment
              FAILED_MSG_BUCKET_PATH : /PSBP-RESERVATION-CANCEL-GUEST360/
              RABBITMQ_QUEUE :   PSBP.RESERVATION.CANCEL.GUEST360
          - service_name: PSBP-RESERVATION-NOSHOW-GUEST360
            image_tag: *image
            desired_count : 1
            cloudmap: False
            environment:
              <<: *environment
              FAILED_MSG_BUCKET_PATH : /PSBP-RESERVATION-NOSHOW-GUEST360/
              RABBITMQ_QUEUE :   PSBP.RESERVATION.NOSHOW.GUEST360
    data_pipe:
      default_router_database: DEFAULT_ROUTER_LATEST_LANDING # Needs update to appropriate default routing
      default_schema: &schema LND_OPERA
      data_mapper_type: nested-xml
      table_path: OperaBusinessEvent.header.ns2:ActionType # This value should match the "name" value under "key_path"
      data_contracts:
        - data_contract: app.src.data_structures.data_contracts.source.opera.v0.opera_cancel_source_data_contract
          class_name: OperaCancelModel
          data_contract_version: 0.0.1
          key_path:
            - name: OperaBusinessEvent.header.ns2:ActionType
              value: CANCEL
          router_database: &database LATEST_LANDING
          router_schema: *schema
          router_table: CANCEL
        - data_contract: app.src.data_structures.data_contracts.source.opera.v0.opera_checkin_source_data_contract
          class_name: OperaCheckinModel
          data_contract_version: 0.0.1
          key_path:
            - name: OperaBusinessEvent.header.ns2:ActionType
              value: CHECK IN
          router_database: *database
          router_schema: *schema
          router_table: CHECKIN
        - data_contract: app.src.data_structures.data_contracts.source.opera.v0.opera_checkout_source_data_contract
          class_name: OperaCheckoutModel
          data_contract_version: 0.0.1
          key_path:
            - name: OperaBusinessEvent.header.ns2:ActionType
              value: CHECK OUT
          router_database: *database
          router_schema: *schema
          router_table: CHECKOUT
        - data_contract: app.src.data_structures.data_contracts.source.opera.v0.opera_new_source_data_contract
          class_name: OperaNewModel
          data_contract_version: 0.0.1
          key_path:
            - name: OperaBusinessEvent.header.ns2:ActionType
              value: NEW RESERVATION
          router_database: *database
          router_schema: *schema
          router_table: NEW
        - data_contract: app.src.data_structures.data_contracts.source.opera.v0.opera_noshow_source_data_contract
          class_name: OperaNoshowModel
          data_contract_version: 0.0.1
          key_path:
            - name: OperaBusinessEvent.header.ns2:ActionType
              value: NO SHOW
          router_database: *database
          router_schema: *schema
          router_table: NOSHOW
        - data_contract: app.src.data_structures.data_contracts.source.opera.v0.opera_update_source_data_contract
          class_name: OperaUpdateModel
          data_contract_version: 0.0.1
          key_path:
            - name: OperaBusinessEvent.header.ns2:ActionType
              value: UPDATE RESERVATION
          router_database: *database
          router_schema: *schema
          router_table: UPDATE